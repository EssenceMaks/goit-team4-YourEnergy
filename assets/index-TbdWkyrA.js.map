{"version":3,"mappings":"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","names":["baseUrl","filtersUrl","quoteURL","subscriptionURL","subscriptionRequest","getQuote","today","storedQuote","storedAuthor","storedDate","response","data","quoteText","author","error","createCategoriesMarkup","cards","a","b","filter","name","getCategories","axios","categoriesList","loadCategories","currentCategoryName","item","index","openCategory","categoryName","paginations","generatePages","totalPages","currentPage","pagesFragment","i","p","pagination","e","page","mutationsList","mutation","newValue","form","emailInput","formData","STORAGE_KEY","saveToLocalStorage","loadFromLocalStorage","savedData","event","value","__vitePreload","initTaskManager","TaskManager","resolve","floatingAddTaskBtn","allCategories","selectedCategoryElement","filterButtons","searchForm","searchInput","category","loadAndFilterCategories","filterType","filteredCategories","displayCategories","categories","markup","button","btn","searchKeyword","exercises","displayExercises","loadExercises","keyword"],"ignoreList":[],"sources":["../../src/js/api-service.js","../../src/js/sidebar-quote.js","../../src/js/markup/categoriesMarkup.js","../../src/js/api-requests.js","../../src/js/categories.js","../../src/partials/components/pagination/PaginationComponent.js","../../src/js/footer-subscribe.js","../../src/js/menu.js","../../src/main.js","../../src/js/search-filters.js"],"sourcesContent":["//string request\nexport const baseUrl = () => {\n  return 'https://your-energy.b.goit.study/api';\n}\n\nexport const exerciseUrl = () => {\n  return  baseUrl() + '/exercises';\n}\n\nexport const filtersUrl = () =>{\n  return  baseUrl() + '/filters';\n}\n\nexport const quoteURL = () => {\n  return  baseUrl() + '/quote';\n}\n\nexport const subscriptionURL = () => {\n  return  baseUrl() + '/subscription';\n}\n\nexport const  exerciseRequest = (bodypart,muscles,equipment,keyword,page,limit) => {\n  return `${exerciseUrl()}?bodypart=${bodypart}&muscles=${muscles}&equipment=${equipment}&${keyword}=2&page=${page}&limit=${limit}`\n}\n\nexport const filtersRequest = (filter, page, limit) => {\n  return `${filtersUrl()}?filter=${filter}&page=${page}&limit=${limit}`\n}\n\nexport const quoteRequest = () => {\n  return  quoteURL();\n}\n\nexport const subscriptionRequest = () => {\n  return  subscriptionURL();\n}\n\nexport const exerciseInfoRequest = (id) => {\n  return `${exerciseUrl()}/exercises/${id}`\n}\n\nexport const addRatingRequest = (id) => {\n  return `${exerciseUrl()}/${id}/rating`\n}\n\n\n","import { quoteURL } from './api-service';\n\nasync function getQuote() {\n    const today = new Date().toISOString().split('T')[0];\n\n    // дані з localStorage\n    const storedQuote = localStorage.getItem('quote');\n    const storedAuthor = localStorage.getItem('author');\n    const storedDate = localStorage.getItem('quoteDate');\n\n    // якщо дата не змінилась, відображаємо збережену цитату&автора і завершуємо функцію\n    if (storedQuote && storedAuthor && storedDate === today) {\n        document.querySelector('.sidebar-quote').textContent = `${storedQuote}`;\n        document.querySelector('.sidebar-quote-author').textContent = `${storedAuthor}`;\n        return;\n    }\n\n    // якщо дата змінилась або цитата&автор відсутні, то запит на бекенд\n    try {\n        const response = await fetch(quoteURL());\n        if (!response.ok) {\n        throw new Error('Failed to fetch quote');\n        }\n\n        const data = await response.json();\n        const quoteText = data.quote;\n        const author = data.author;\n\n        document.querySelector('.sidebar-quote').textContent = `${quoteText}`;\n        document.querySelector('.sidebar-quote-author').textContent = `${author}`;\n\n        // збереження в localStorage\n        localStorage.setItem('quote', quoteText);\n        localStorage.setItem('author', author);\n        localStorage.setItem('quoteDate', today);\n\n    } catch (error) {\n        console.error('Error fetching quote:', error);\n    }\n}\n\ngetQuote();\n","export default function createCategoriesMarkup(cards) {\n    return cards\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .map(\n        ({ filter, name }) =>\n          `<li class='categories-item' data-name='${name}' data-filter='${filter}' tabindex=\"0\">         \n             <h3 class=\"categories-item-title\">${name}</h3>\n             <p class=\"categories-item-text\">${filter}</p>   \n          </li>`\n      )\n      .join('');\n  }\n  ","import { filtersUrl } from './api-service';\nimport axios from 'axios';\n\nexport async function getCategories() {\n    const { data } = await axios.get(`${filtersUrl()}`);\n    return data; \n  }","import createCategoriesMarkup from './markup/categoriesMarkup';\nimport { getCategories } from './api-requests';\n\nlet categoriesList = document.querySelector('.categories-list');\n\nasync function loadCategories(currentCategoryName) {\n  //параметри для фільтру, відображення\n  try {\n    const data = await getCategories();\n\n    //логіка if для відображення сітки з фільтрами\n\n    categoriesList.innerHTML = createCategoriesMarkup(data.results); // малюємо сітку без фільтрів\n\n    let categoriesItem = document.querySelectorAll('.categories-item');\n    categoriesItem.forEach((item, index) => {\n      item.style.backgroundImage = `url(${data.results[index].imgURL})`;\n      item.style.backgroundSize = 'cover';\n      item.style.backgroundRepeat = 'no-repeat';\n      item.style.backgroundPosition = 'center';\n      item.addEventListener('click', openCategory); // логіка відкриття вправ по категорії\n    });\n  } catch (error) {\n    console.error('Error loading categories:', error); //логіка помилок\n  }\n}\n\n// логіка відкриття вправ по категорії\nfunction openCategory(e) {\n  e.target.removeEventListener('click', openCategory);\n  categoriesList.style.display = 'none';\n  let categoryName = e.target.dataset.name;\n  console.log(categoryName); //потім видалити\n  //виклик ф-ії відмалювання вправ по картегорії\n}\n\nloadCategories();\n","const paginations = document.querySelectorAll('.pagination');\n\nconst generatePages = (totalPages, currentPage) =>{\n  let pagesFragment = new DocumentFragment();\n  for(let i = 0; i < totalPages; i++) {\n    let p = document.createElement('p');\n    p.setAttribute('index', i);\n    p.innerHTML = i + 1;\n    p.classList.add('pagination-page');\n    if (i===currentPage){p.classList.add('selected');}\n    pagesFragment.appendChild(p);\n  }\n  return pagesFragment;\n}\n\npaginations.forEach(pagination => {\n\n  if (pagination.hasAttribute('total-pages')){\n    pagination.innerHTML='';\n    const totalPages = parseInt(pagination.getAttribute('total-pages'));\n    const currentPage = parseInt(pagination.getAttribute('current-page'));\n\n    pagination.appendChild(generatePages(totalPages, currentPage));\n    pagination.addEventListener('click', async (e) => {\n\n      if (e.target.classList.contains('pagination-page')){\n        const pages = pagination.querySelectorAll('.pagination-page');\n        pages.forEach(page => {\n            page.classList.remove('selected');\n        })\n        e.target.classList.add('selected');\n        e.target.parentElement.setAttribute('current-page', e.target.getAttribute('index'));\n      }\n\n    })\n\n    const observer = new MutationObserver((mutationsList) => {\n      for (let mutation of mutationsList) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'total-pages') {\n          const newValue = pagination.getAttribute('total-pages');\n          pagination.innerHTML ='';\n          pagination.appendChild(generatePages(newValue, parseInt(pagination.getAttribute('current-page'))));\n\n        }\n      }\n    });\n\n    observer.observe(pagination, { attributes: true });\n\n  }\n})","import axios from \"axios\";\n// import Notiflix from 'notiflix';\n// залишаю пок що через  alert, узгодимо бібліотеку буду доробляти\nimport {subscriptionRequest} from './api-service';\n\n\nconst form = document.querySelector('.subscribe-form');\nconst emailInput = form.elements.email;\n\nlet formData = { email: \"\" };\nconst STORAGE_KEY = 'subscribe-form-state';\n\nconst saveToLocalStorage = () => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n};\n\nconst loadFromLocalStorage = () => {\n    const savedData = localStorage.getItem(STORAGE_KEY);\n    if (savedData) {\n        formData = JSON.parse(savedData);\n        emailInput.value = formData.email || '';\n    }\n};\n\nloadFromLocalStorage();\n\nform.addEventListener('input', (event) => {\n    const { name, value } = event.target;\n    formData[name] = value.trim();\n    saveToLocalStorage();\n});\n\nform.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    if (!emailInput.validity.valid) {\n        alert('Please enter a valid email');\n        return;\n    }\n\n    formData.email = emailInput.value.trim();\n\n    try {\n        const response = await axios.post(subscriptionRequest(), formData);\n\n        if (response.data.error) {\n            if (response.status === 409) {\n                alert('This email is already subscribed.');\n            } else {\n                alert('Subscription failed. Please try again later.');\n            }\n        } else {\n            alert('Subscription successful!');\n        }\n    } catch (error) {\n        if (error.response && error.response.status === 409) {\n            alert('This email is already subscribed.');\n        } else {\n            alert('Subscription failed. Please try again later.');\n        }\n    }\n\n    form.reset();\n    localStorage.removeItem(STORAGE_KEY);\n});\n","window.openMenu = function openMenu() {\n  const backdrop = document.getElementById('backdrop');\n  const classes = backdrop.classList;\n  classes.add('is-open');\n}\n\nwindow.closeMenu = function closeMenu() {\n  const backdrop = document.getElementById('backdrop');\n  const classes = backdrop.classList;\n  classes.remove('is-open');\n}\n\nwindow.menuLayoutClickHandler = function menuLayoutClickHandler(event) {\n  event.stopPropagation();\n}","// Импортируем общие стили\n\nimport './css/styles.css';\nimport './js/sidebar-quote.js'\nimport './js/categories.js'\nimport './partials/components/pagination/PaginationComponent.js'\nimport './js/footer-subscribe.js'\nimport './js/menu.js';\n\n\n\n\n// Если мы на странице task-management, загружаем дополнительные стили\nif (window.location.pathname.includes('task-management')) {\n    import('./css/task-manager.css');\n}\n\n// Функция для инициализации TaskManager\nasync function initTaskManager() {\n    if (!window.taskManager) {\n        try {\n            const TaskManagerModule = await import('./js/task-manager.js');\n            const TaskManager = TaskManagerModule.default;\n            window.taskManager = new TaskManager();\n            await new Promise(resolve => setTimeout(resolve, 200));\n        } catch (error) {\n            console.error('Error initializing TaskManager:', error);\n            return null;\n        }\n    }\n    return window.taskManager;\n}\n\n// Инициализируем обработчики кнопок\ndocument.addEventListener('DOMContentLoaded', async () => {\n    try {\n        // Если мы на странице task-management\n        if (window.location.pathname.includes('task-management')) {\n            // Инициализируем TaskManager\n            await initTaskManager();\n\n            // Обработчик для плавающей кнопки\n            const floatingAddTaskBtn = document.getElementById('addTaskBtn');\n            if (floatingAddTaskBtn) {\n                floatingAddTaskBtn.addEventListener('click', async (e) => {\n                    e.preventDefault();\n                    if (window.taskManager) {\n                        window.taskManager.showModal();\n                    } else {\n                        console.error('TaskManager not initialized');\n                    }\n                });\n            }\n        }\n    } catch (error) {\n        console.error('Error initializing task manager:', error);\n    }\n});\n\n","import { getCategories } from './api-requests';\nimport createCategoriesMarkup from './markup/categoriesMarkup';\n\n\n// Ініціалізація основних змінних\nlet allCategories = [];\nconst selectedCategoryElement = document.querySelector('.selected-category');\nconst categoriesList = document.querySelector('.categories-list');\nconst filterButtons = document.querySelectorAll('.filter-button');\nconst searchForm = document.querySelector('#search-form');\nconst searchInput = document.querySelector('#search-input');\n\n// Функція для початкового завантаження категорій\nasync function loadCategories() {\n  try {\n    const data = await getCategories();\n    console.log(\"Отримані категорії з API:\", data.results); // Додатковий лог для перевірки\n    categoriesList.innerHTML = createCategoriesMarkup(data.results);\n    allCategories = data.results.map(category => ({\n      name: category.name,\n      imgURL: category.imgURL,\n      filter: category.filter,\n    }));\n    console.log(\"Збережені категорії в allCategories:\", allCategories); // Додатковий лог для перевірки\n\n    let categoriesItems = document.querySelectorAll('.categories-item');\n    categoriesItems.forEach(item => {\n      item.addEventListener('click', openCategory);\n    });\n  } catch (error) {\n    console.error('Error loading categories:', error);\n  }\n}\n\n\n// Функція для фільтрації категорій за вибраним типом\nfunction loadAndFilterCategories(filterType = 'all') {\n  console.log(\"Значення фільтра:\", filterType); // Додаємо логування для перевірки значення фільтра\n\n  const filteredCategories = filterType === 'all'\n    ? allCategories\n    : allCategories.filter(category =>\n        category.filter.toLowerCase() === filterType.toLowerCase()\n      );\n\n  console.log(\"Категорії після фільтрації:\", filteredCategories); // Додаємо логування для перевірки результату фільтрації\n  displayCategories(filteredCategories);\n}\n\n\n\n // Функція для відображення категорій\nfunction displayCategories(categories) {\n  console.log(\"Категорії для відображення:\", categories); // Лог для діагностики\n\n  const markup = createCategoriesMarkup(categories);\n  console.log(\"Згенерований HTML для категорій:\", markup); // Лог для діагностики\n\n  categoriesList.innerHTML = markup;\n\n  const categoriesItems = document.querySelectorAll('.categories-item');\n  categoriesItems.forEach(item => {\n    item.addEventListener('click', openCategory);\n  });\n}\n\n\n// Додаємо обробники подій до кнопок фільтрів\nfilterButtons.forEach(button => {\n    button.addEventListener('click', (e) => {\n        const filterType = e.target.getAttribute('data-filter');\n        loadAndFilterCategories(filterType);\n\n        // Робимо кнопку активною\n        filterButtons.forEach(btn => btn.classList.remove('active'));\n        e.target.classList.add('active');\n    });\n});\n\n// Обробник події для форми пошуку\nsearchForm.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  const searchKeyword = searchInput.value.trim();\n  const category = selectedCategoryElement.textContent.trim().split(' / ')[1]; // Беремо поточну категорію\n  try {\n    const exercises = await getExercises(category, searchKeyword);\n    displayExercises(exercises); // Виклик функції для відображення знайдених вправ\n  } catch (error) {\n    console.error('Error loading exercises:', error);\n  }\n});\n\n// Функція для оновлення заголовка з вибраною категорією\nfunction openCategory(e) {\n  const categoryName = e.currentTarget.dataset.name;\n  selectedCategoryElement.textContent = ` / ${categoryName}`;\n  categoriesList.style.display = 'none';\n  loadExercises(categoryName);\n}\n// Функція для завантаження вправ на основі категорії та ключового слова\nasync function loadExercises(categoryName, keyword = '') {\n  try {\n    const exercises = await getExercises(categoryName, keyword);\n    displayExercises(exercises); // Викликаємо функцію відображення знайдених вправ\n  } catch (error) {\n    console.error('Error loading exercises:', error);\n  }\n}\n\n// Функція для відображення вправ\nfunction displayExercises(exercises) {\n  // Тут додайте розмітку та стилі для відображення знайдених вправ\n  console.log('Exercises found:', exercises); // Лог для тестування\n}\n\n// Ініціалізація: Завантажуємо всі категорії на старті\nloadCategories();\n\n"],"file":"assets/index-TbdWkyrA.js"}