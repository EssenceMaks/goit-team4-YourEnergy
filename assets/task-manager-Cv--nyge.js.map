{"version":3,"file":"task-manager-Cv--nyge.js","sources":["../../src/js/task-manager.js"],"sourcesContent":["class TaskManager {\n    constructor() {\n        this.tasks = [];\n        this.currentTaskId = null;\n        this.modalEscapeListener = null;\n        this.loadTheme();\n        this.loadTasks().then(() => {\n            this.init();\n        });\n    }\n\n    async loadTasks() {\n        try {\n            const response = await fetch('https://script.google.com/macros/s/AKfycbwMbiYIzsnP07ciF6zVwV3jiajZT6_fNFBnYxN1vRJJbuQ2VVaS12a6RwYiRV3IxTjP/exec');\n            const data = await response.json();\n            this.tasks = data.tasks || [];\n            this.renderTasks();\n        } catch (error) {\n            console.error('Error loading tasks:', error);\n            this.tasks = []; // Если не удалось загрузить, начинаем с пустого массива\n        }\n    }\n\n    async saveTasks() {\n        try {\n            const response = await fetch('https://script.google.com/macros/s/AKfycbwMbiYIzsnP07ciF6zVwV3jiajZT6_fNFBnYxN1vRJJbuQ2VVaS12a6RwYiRV3IxTjP/exec', {\n                method: 'POST',\n                body: JSON.stringify({ tasks: this.tasks })\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to save tasks');\n            }\n            \n            console.log('Tasks saved successfully');\n        } catch (error) {\n            console.error('Error saving tasks:', error);\n            // Можно добавить уведомление пользователю о неудачном сохранении\n            alert('Не удалось сохранить изменения. Попробуйте еще раз.');\n        }\n    }\n\n    init() {\n        this.setupEventListeners();\n        this.renderTasks();\n        this.setupDragAndDrop();\n    }\n\n    setupEventListeners() {\n        console.log('Setting up event listeners');\n        \n        const addButton = document.getElementById('addTaskBtn');\n        console.log('Add button:', addButton);\n        \n        addButton.addEventListener('click', () => {\n            console.log('Add button clicked');\n            this.currentTaskId = null;\n            this.showModal();\n        });\n\n        // Закрытие модального окна по клику на крестик\n        document.querySelector('.close').addEventListener('click', () => {\n            this.hideModal();\n        });\n\n        // Обработка формы\n        document.getElementById('taskForm').addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.handleFormSubmit();\n        });\n\n        // Добавляем обработчик для переключения темы\n        document.getElementById('themeToggleBtn').addEventListener('click', () => {\n            this.toggleTheme();\n        });\n\n        // Добавляем обработчик для поля номера задачи\n        const taskNumberInput = document.getElementById('taskNumber');\n        taskNumberInput.addEventListener('input', (e) => {\n            this.handleTaskNumberInput(e.target.value);\n        });\n\n        // Закрываем подсказки при клике вне поля\n        document.addEventListener('click', (e) => {\n            if (!e.target.closest('.task-number-container')) {\n                document.getElementById('taskNumberSuggestions').style.display = 'none';\n            }\n        });\n\n        // Добавляем обработчик для кнопки добавления исполнителя\n        document.getElementById('addAssigneeBtn').addEventListener('click', () => {\n            this.addAssigneeField();\n        });\n\n        // Добавляем делегирование событий для кнопок удаления исполнителя\n        document.getElementById('assigneesList').addEventListener('click', (e) => {\n            if (e.target.classList.contains('remove-assignee-btn')) {\n                const assigneeItem = e.target.closest('.assignee-item');\n                if (assigneeItem && document.querySelectorAll('.assignee-item').length > 1) {\n                    assigneeItem.remove();\n                }\n            }\n        });\n\n        // Добавляем обработчик для кнопки добавления подзадачи\n        document.getElementById('addSubtaskBtn').addEventListener('click', () => {\n            this.addSubtaskField();\n        });\n\n        // Добавляем делегирование событий для кнопок удаления подзадачи\n        document.getElementById('subtasksList').addEventListener('click', (e) => {\n            if (e.target.classList.contains('remove-subtask-btn')) {\n                e.target.closest('.subtask-item').remove();\n            }\n        });\n    }\n\n    addAssigneeField() {\n        const assigneesList = document.getElementById('assigneesList');\n        assigneesList.appendChild(this.createAssigneeItem('empty'));\n    }\n\n    addSubtaskField(text = '', completed = false) {\n        const subtasksList = document.getElementById('subtasksList');\n        const subtaskItem = document.createElement('div');\n        subtaskItem.className = 'subtask-item';\n        subtaskItem.innerHTML = `\n            <input type=\"checkbox\" class=\"subtask-checkbox\" ${completed ? 'checked' : ''}>\n            <input type=\"text\" class=\"subtask-text\" value=\"${text}\" placeholder=\"Введите подзадачу\">\n            <button type=\"button\" class=\"remove-subtask-btn\">×</button>\n        `;\n        subtasksList.appendChild(subtaskItem);\n    }\n\n    handleTaskNumberInput(value) {\n        const suggestionsContainer = document.getElementById('taskNumberSuggestions');\n        const input = document.getElementById('taskNumber');\n\n        // Очищаем стили и подсказки если поле пустое\n        if (!value) {\n            input.classList.remove('exists', 'available');\n            suggestionsContainer.style.display = 'none';\n            return;\n        }\n\n        // Получаем все существующие номера задач\n        const existingNumbers = this.tasks\n            .map(task => task.taskNumber)\n            .filter(number => number) // Фильтруем undefined и пустые значения\n            .sort((a, b) => a - b);\n\n        // Проверяем существует ли введенный номер\n        const exists = existingNumbers.includes(value);\n        input.classList.toggle('exists', exists);\n        input.classList.toggle('available', !exists && value.length > 0);\n\n        // Показывм похожие номера\n        if (value.length > 0) {\n            const suggestions = existingNumbers\n                .filter(number => number.toString().includes(value))\n                .slice(0, 5); // Показываем только первые 5 совпадений\n\n            if (suggestions.length > 0) {\n                suggestionsContainer.innerHTML = suggestions\n                    .map(number => `\n                        <div class=\"suggestion-item\" onclick=\"window.taskManager.selectTaskNumber('${number}')\">\n                            ${number}\n                        </div>\n                    `)\n                    .join('');\n                suggestionsContainer.style.display = 'block';\n            } else {\n                suggestionsContainer.style.display = 'none';\n            }\n        } else {\n            suggestionsContainer.style.display = 'none';\n        }\n    }\n\n    selectTaskNumber(number) {\n        document.getElementById('taskNumber').value = number;\n        document.getElementById('taskNumberSuggestions').style.display = 'none';\n    }\n\n    showModal(taskId = null) {\n        const modal = document.getElementById('taskModal');\n        const form = document.getElementById('taskForm');\n        const assigneesList = document.getElementById('assigneesList');\n        const deleteBtn = modal.querySelector('.delete-task-btn');\n        \n        // Показываем кнопку удаления только при редактировании\n        deleteBtn.style.display = taskId ? 'block' : 'none';\n        \n        // Очищаем список исполнителей\n        assigneesList.innerHTML = '';\n        \n        const subtasksList = document.getElementById('subtasksList');\n        subtasksList.innerHTML = '';\n        \n        if (taskId) {\n            const task = this.tasks.find(t => t.id === taskId);\n            if (task) {\n                form.taskNumber.value = task.taskNumber || '';\n                form.taskTitle.value = task.title;\n                form.taskDescription.value = task.description;\n                form.taskCategory.value = task.category;\n                form.taskPriority.value = task.priorityStatus;\n                form.taskStatus.value = task.progressStatus;\n                \n                // Добавляем поля для каждого исполнителя\n                const assignees = task.assignees || [task.assignee || 'empty'];\n                assignees.forEach(assignee => {\n                    assigneesList.appendChild(this.createAssigneeItem(assignee));\n                });\n                \n                // Добавляем подзадачи\n                task.subtasks?.forEach(subtask => {\n                    this.addSubtaskField(subtask.text, subtask.completed);\n                });\n                \n                this.currentTaskId = taskId;\n            }\n        } else {\n            form.reset();\n            form.taskCategory.value = 'Must_Have';\n            // Добавляем одно пустое поле исполнителя\n            assigneesList.appendChild(this.createAssigneeItem('empty'));\n        }\n        \n        modal.style.display = 'block';\n        \n        // Добавляем обработчик для кнопки удаления\n        deleteBtn.onclick = () => this.showDeleteConfirmation(taskId);\n        \n        // Добавляем обработчик Escape\n        this.modalEscapeListener = (e) => {\n            if (e.key === 'Escape') {\n                this.hideModal();\n            }\n        };\n        document.addEventListener('keydown', this.modalEscapeListener);\n\n        // Добавляем обработчик клика вне модального окна\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                this.hideModal();\n            }\n        });\n    }\n\n    showDeleteConfirmation(taskId) {\n        const confirmModal = document.getElementById('deleteConfirmModal');\n        confirmModal.style.display = 'block';\n\n        // Обработчик подтверждения удаления\n        const handleConfirm = () => {\n            this.deleteTask(taskId);\n            confirmModal.style.display = 'none';\n            this.hideModal();\n            cleanup();\n        };\n\n        // Обработчик отмены\n        const handleCancel = () => {\n            confirmModal.style.display = 'none';\n            cleanup();\n        };\n\n        // Обработчик клика вне модального окна\n        const handleOutsideClick = (e) => {\n            if (e.target === confirmModal) {\n                confirmModal.style.display = 'none';\n                cleanup();\n            }\n        };\n\n        // Обработчик клавиши Escape\n        const handleEscape = (e) => {\n            if (e.key === 'Escape') {\n                confirmModal.style.display = 'none';\n                cleanup();\n            }\n        };\n\n        // Очистка обработчиков\n        const cleanup = () => {\n            document.getElementById('confirmDelete').removeEventListener('click', handleConfirm);\n            document.getElementById('cancelDelete').removeEventListener('click', handleCancel);\n            confirmModal.removeEventListener('click', handleOutsideClick);\n            document.removeEventListener('keydown', handleEscape);\n        };\n\n        // Добавляем обработчики\n        document.getElementById('confirmDelete').addEventListener('click', handleConfirm);\n        document.getElementById('cancelDelete').addEventListener('click', handleCancel);\n        confirmModal.addEventListener('click', handleOutsideClick);\n        document.addEventListener('keydown', handleEscape);\n    }\n\n    hideModal() {\n        const modal = document.getElementById('taskModal');\n        modal.style.display = 'none';\n        \n        // Удаляем обработчик Escape при закрытии модального окна\n        if (this.modalEscapeListener) {\n            document.removeEventListener('keydown', this.modalEscapeListener);\n            this.modalEscapeListener = null;\n        }\n    }\n\n    handleFormSubmit() {\n        const form = document.getElementById('taskForm');\n        \n        // Собираем подзадачи\n        const subtasks = Array.from(form.querySelectorAll('.subtask-item')).map(item => ({\n            id: Date.now() + Math.random().toString(36).substr(2, 9),\n            text: item.querySelector('.subtask-text').value,\n            completed: item.querySelector('.subtask-checkbox').checked\n        }));\n\n        // Собираем исполнителей, включая 'empty'\n        const assignees = Array.from(form.querySelectorAll('.taskAssignee'))\n            .map(select => select.value)\n            .filter(value => value); // Убираем пустые значения, но оставляем 'empty'\n\n        // Если нет исполнителей или все исполнители были удалены, добавляем 'empty'\n        if (assignees.length === 0) {\n            assignees.push('empty');\n        }\n\n        const taskData = {\n            title: form.taskTitle.value,\n            taskNumber: form.taskNumber.value || null,\n            description: form.taskDescription.value,\n            category: form.taskCategory.value,\n            priorityStatus: form.taskPriority.value,\n            progressStatus: form.taskStatus.value,\n            assignees: assignees,\n            subtasks: subtasks\n        };\n\n        // Проверяем уникальность номера задачи\n        if (taskData.taskNumber) {\n            const exists = this.tasks.some(task => \n                task.taskNumber === taskData.taskNumber && \n                task.id !== this.currentTaskId\n            );\n            if (exists) {\n                alert('Задача с таким номером уже существует!');\n                return;\n            }\n        }\n\n        if (this.currentTaskId) {\n            this.updateTask(this.currentTaskId, taskData);\n        } else {\n            this.addTask(taskData);\n        }\n\n        this.hideModal();\n        this.renderTasks();\n    }\n\n    addTask(taskData) {\n        const generateUniqueId = () => {\n            const timestamp = Date.now();\n            const random = Math.floor(Math.random() * 10000);\n            return `${timestamp}-${random}`;\n        };\n\n        // Генерируем ID и проверяем его уникальность\n        let taskId;\n        do {\n            taskId = generateUniqueId();\n        } while (this.tasks.some(task => task.id === taskId));\n\n        const task = {\n            id: taskId,\n            taskNumber: taskData.taskNumber || null,\n            title: taskData.title,\n            description: taskData.description,\n            category: taskData.category || 'Must_Have',\n            priorityStatus: taskData.priorityStatus,\n            progressStatus: taskData.progressStatus,\n            assignees: taskData.assignees,\n            subtasks: taskData.subtasks || [],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n        \n        this.tasks.push(task);\n        this.saveTasks();\n    }\n\n    updateTask(taskId, taskData) {\n        const index = this.tasks.findIndex(t => t.id === taskId);\n        if (index !== -1) {\n            this.tasks[index] = {\n                ...this.tasks[index],\n                taskNumber: taskData.taskNumber,\n                title: taskData.title,\n                description: taskData.description,\n                category: taskData.category,\n                priorityStatus: taskData.priorityStatus,\n                progressStatus: taskData.progressStatus,\n                assignees: taskData.assignees,\n                subtasks: taskData.subtasks,\n                updatedAt: new Date().toISOString()\n            };\n            this.saveTasks();\n        }\n    }\n\n    deleteTask(taskId) {\n        this.tasks = this.tasks.filter(t => t.id !== taskId);\n        this.saveTasks();\n        this.renderTasks();\n    }\n\n    renderTasks() {\n        // Очищаем все зоны\n        document.querySelectorAll('.drop-zone').forEach(zone => {\n            zone.innerHTML = '';\n        });\n\n        // Отрисовываем задачи в основной таблице\n        this.tasks.forEach(task => {\n            // Проверяем и конвертируем старый формат в новый\n            if (!task.assignees && task.assignee) {\n                task.assignees = [task.assignee];\n                delete task.assignee;\n            }\n            \n            // Проверяем, есть ли среди исполнителей кто-то кроме Empty\n            const hasNonEmptyAssignee = task.assignees.some(assignee => assignee !== 'empty');\n            \n            // Создаем элемент задачи только если есть не-Empty исполнитель\n            if (hasNonEmptyAssignee) {\n                const taskElement = this.createTaskElement(task);\n                const dropZone = document.querySelector(\n                    `.drop-zone[data-priority=\"${task.priorityStatus}\"][data-status=\"${task.progressStatus}\"]`\n                );\n                if (dropZone) {\n                    dropZone.appendChild(taskElement);\n                }\n            }\n        });\n\n        // Отрисовываем Must Have задачи (включая Empty)\n        const mustHaveGrid = document.querySelector('.must-have-grid');\n        if (mustHaveGrid) {\n            mustHaveGrid.innerHTML = '';\n            const mustHaveTasks = this.tasks.filter(task => task.category === 'Must_Have');\n            const mustHaveByAssignee = this.groupTasksByAssignee(mustHaveTasks, true);\n            this.renderGroupedTasks(mustHaveByAssignee, mustHaveGrid);\n        }\n\n        // Отрисовываем Upgrade задачи (включая Empty)\n        const upgradeGrid = document.querySelector('.upgrade-grid');\n        if (upgradeGrid) {\n            upgradeGrid.innerHTML = '';\n            const upgradeTasks = this.tasks.filter(task => task.category === 'Upgrade');\n            const upgradeByAssignee = this.groupTasksByAssignee(upgradeTasks, true);\n            this.renderGroupedTasks(upgradeByAssignee, upgradeGrid);\n        }\n    }\n\n    createTaskElement(task) {\n        const div = document.createElement('div');\n        div.className = 'task-card';\n        div.draggable = true;\n        div.dataset.taskId = task.id;\n        \n        // Фильтруем исполнителей, исключая Empty\n        const nonEmptyAssignees = (task.assignees || [task.assignee || 'empty'])\n            .filter(assignee => assignee !== 'empty');\n        \n        // Создаем номер задачи: если есть taskNumber используем его, \n        // иначе берем последние 4 символа из ID, конвертируя в строку\n        const taskNumber = task.taskNumber || \n            (typeof task.id === 'string' ? \n                task.id.slice(-4) : \n                String(task.id).slice(-4));\n        \n        div.innerHTML = `\n            <div class=\"task-card-header\">\n                <div class=\"task-left\">\n                    <h4 class=\"task-title\">${task.title}</h4>\n                    <div class=\"task-number\">#${taskNumber}</div>\n                    <p class=\"task-description\">${task.description}</p>\n                </div>\n                <div class=\"task-right\">\n                    <div class=\"assignees-list\">\n                        ${nonEmptyAssignees.map(assignee => `\n                            <div class=\"assignee-badge\">${assignee}</div>\n                        `).join('')}\n                    </div>\n                    <div class=\"task-status-badge\">${task.progressStatus}</div>\n                    <div class=\"category-badge\" data-category=\"${task.category}\">${task.category}</div>\n                </div>\n            </div>\n        `;\n\n        // Добавляем отображение прогресса подзадач\n        if (task.subtasks?.length > 0) {\n            const completed = task.subtasks.filter(st => st.completed).length;\n            const total = task.subtasks.length;\n            div.querySelector('.task-left').insertAdjacentHTML('beforeend', `\n                <div class=\"subtasks-progress\">\n                    ${completed}/${total}\n                </div>\n            `);\n        }\n\n        div.addEventListener('click', () => this.showModal(task.id));\n        return div;\n    }\n\n    setupDragAndDrop() {\n        console.log('Setting up drag and drop');\n        \n        document.addEventListener('dragstart', (e) => {\n            console.log('Drag started:', e.target);\n            if (e.target.classList.contains('task-card')) {\n                e.target.classList.add('dragging');\n                e.dataTransfer.setData('text/plain', e.target.dataset.taskId);\n            }\n        });\n\n        document.addEventListener('dragend', (e) => {\n            if (e.target.classList.contains('task-card')) {\n                e.target.classList.remove('dragging');\n            }\n        });\n\n        const dropZones = document.querySelectorAll('.drop-zone');\n        dropZones.forEach(zone => {\n            zone.addEventListener('dragover', (e) => {\n                e.preventDefault();\n                zone.classList.add('dragover');\n            });\n\n            zone.addEventListener('dragleave', (e) => {\n                zone.classList.remove('dragover');\n            });\n\n            zone.addEventListener('drop', (e) => {\n                e.preventDefault();\n                zone.classList.remove('dragover');\n                \n                const taskId = e.dataTransfer.getData('text/plain');\n                const task = this.tasks.find(t => t.id === taskId);\n                \n                if (task) {\n                    // Проверяем и конвертируем старый формат в новый\n                    if (!task.assignees && task.assignee) {\n                        task.assignees = [task.assignee];\n                        delete task.assignee;\n                    }\n                    \n                    task.priorityStatus = zone.dataset.priority;\n                    task.progressStatus = zone.dataset.status;\n                    task.updatedAt = new Date().toISOString();\n                    this.saveTasks();\n                    this.renderTasks();\n                }\n            });\n        });\n    }\n\n    loadTheme() {\n        const savedTheme = localStorage.getItem('theme') || 'dark';\n        document.documentElement.setAttribute('data-theme', savedTheme);\n    }\n\n    toggleTheme() {\n        const currentTheme = document.documentElement.getAttribute('data-theme');\n        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n        document.documentElement.setAttribute('data-theme', newTheme);\n        localStorage.setItem('theme', newTheme);\n    }\n\n    // Обновленный метод groupTasksByAssignee с параметром includeEmpty\n    groupTasksByAssignee(tasks, includeEmpty = false) {\n        const grouped = {};\n        tasks.forEach(task => {\n            const assignees = task.assignees || [task.assignee || 'empty'];\n            assignees.forEach(assignee => {\n                // Включаем Empty только если includeEmpty = true\n                if (assignee !== 'empty' || includeEmpty) {\n                    if (!grouped[assignee]) {\n                        grouped[assignee] = [];\n                    }\n                    if (!grouped[assignee].includes(task)) {\n                        grouped[assignee].push(task);\n                    }\n                }\n            });\n        });\n        return grouped;\n    }\n\n    // Обновим метод renderGroupedTasks для поддержки множественных исполнителей\n    renderGroupedTasks(groupedTasks, container) {\n        Object.entries(groupedTasks).forEach(([assignee, tasks]) => {\n            // Создаем колонку с исполнителем\n            const assigneeColumn = document.createElement('div');\n            assigneeColumn.className = 'task-assignee';\n            assigneeColumn.innerHTML = `\n                <div class=\"assignee-name ${assignee === 'empty' ? 'empty-assignee' : ''}\">\n                    ${assignee}\n                </div>\n                ${tasks.map(task => `\n                    <div class=\"task-status\" data-task-id=\"${task.id}\">${task.progressStatus}</div>\n                `).join('')}\n            `;\n\n            assigneeColumn.addEventListener('click', (e) => {\n                const taskId = e.target.dataset.taskId;\n                if (taskId) {\n                    this.showModal(taskId);\n                }\n            });\n            container.appendChild(assigneeColumn);\n\n            // Создаем колонку с задачами\n            const tasksColumn = document.createElement('div');\n            tasksColumn.className = 'task-content';\n            tasksColumn.innerHTML = tasks.map(task => `\n                <div class=\"task-item\" data-task-id=\"${task.id}\">\n                    <h4>${task.title}</h4>\n                    <div class=\"task-assignees\">\n                        ${(task.assignees || [task.assignee || 'empty']).map(a => `\n                            <span class=\"assignee-badge\">${a}</span>\n                        `).join('')}\n                    </div>\n                    <p>${task.description}</p>\n                </div>\n            `).join('');\n\n            tasksColumn.addEventListener('click', (e) => {\n                const taskItem = e.target.closest('.task-item');\n                if (taskItem) {\n                    const taskId = taskItem.dataset.taskId;\n                    this.showModal(taskId);\n                }\n            });\n            container.appendChild(tasksColumn);\n        });\n    }\n\n    createAssigneeSelect() {\n        return `\n            <select class=\"taskAssignee\" required>\n                <option value=\"empty\">Empty</option>\n                <option value=\"Andrii Sushylnikov\">Andrii Sushylnikov</option>\n                <option value=\"Daria Honcharuk\">Daria Honcharuk</option>\n                <option value=\"Dmytro Mayevsky\">Dmytro Mayevsky</option>\n                <option value=\"Maks Ki\">Maks Ki</option>\n                <option value=\"Mariia Sv.\">Mariia Sv.</option>\n                <option value=\"Roman Turas\">Roman Turas</option>\n                <option value=\"Viktoriia Didenko\">Viktoriia Didenko</option>\n                <option value=\"Hryhorii Chernysh\">Hryhorii Chernysh (Mentor)</option>\n                <option value=\"Daria\">Daria (client manager)</option>\n                <option value=\"Lesya Katanova\">Lesya Katanova</option>\n                <option value=\"Olena Deineha\">Olena Deineha</option>\n            </select>\n        `;\n    }\n\n    createAssigneeItem(selectedValue = 'empty') {\n        const div = document.createElement('div');\n        div.className = 'assignee-item';\n        div.innerHTML = `\n            ${this.createAssigneeSelect()}\n            <button type=\"button\" class=\"remove-assignee-btn\">×</button>\n        `;\n        div.querySelector('select').value = selectedValue;\n        return div;\n    }\n}\n\n// Исправим инициализацию\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.taskManager = new TaskManager();\n}); "],"names":["TaskManager","data","error","addButton","e","assigneeItem","text","completed","subtasksList","subtaskItem","value","suggestionsContainer","input","existingNumbers","task","number","a","b","exists","suggestions","taskId","_a","modal","form","assigneesList","deleteBtn","t","assignee","subtask","confirmModal","handleConfirm","cleanup","handleCancel","handleOutsideClick","handleEscape","subtasks","item","assignees","select","taskData","generateUniqueId","timestamp","random","index","zone","taskElement","dropZone","mustHaveGrid","mustHaveTasks","mustHaveByAssignee","upgradeGrid","upgradeTasks","upgradeByAssignee","div","nonEmptyAssignees","taskNumber","st","total","savedTheme","newTheme","tasks","includeEmpty","grouped","groupedTasks","container","assigneeColumn","tasksColumn","taskItem","selectedValue"],"mappings":"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"}