{"version":3,"mappings":"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","names":["createCategoriesMarkup","cards","a","b","filter","name","baseUrl","filtersUrl","getCategories","data","axios","categoriesList","loadCategories","currentCategoryName","item","index","openCategory","error","categoryName","paginations","pagination","totalPages","currentPage","pagesFragment","i","p","e","page","__vitePreload","initTaskManager","TaskManager","resolve","floatingAddTaskBtn"],"ignoreList":[],"sources":["../../src/js/markup/categoriesMarkup.js","../../src/js/api-service.js","../../src/js/api-requests.js","../../src/js/categories.js","../../src/partials/components/pagination/PaginationComponent.js","../../src/main.js"],"sourcesContent":["export default function createCategoriesMarkup(cards) {\n    return cards\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .map(\n        ({ filter, name }) =>\n          `<li class='categories-item' data-name='${name}' data-filter='${filter}' tabindex=\"0\">         \n             <h3 class=\"categories-item-title\">${name}</h3>\n             <p class=\"categories-item-text\">${filter}</p>   \n          </li>`\n      )\n      .join('');\n  }\n  ","//string request\nexport const baseUrl = () => {\n  return 'https://your-energy.b.goit.study/api';\n}\n\nexport const exerciseUrl = () => {\n  return  baseUrl() + '/exercises';\n}\n\nexport const filtersUrl = () =>{\n  return  baseUrl() + '/filters';\n}\n\nexport const quoteURL = () => {\n  return  baseUrl() + '/quote';\n}\n\nexport const subscriptionURL = () => {\n  return  baseUrl() + '/subscription';\n}\n\nexport const  exerciseRequest = (bodypart,muscles,equipment,keyword,page,limit) => {\n  return `${exerciseUrl()}?bodypart=${bodypart}&muscles=${muscles}&equipment=${equipment}&${keyword}=2&page=${page}&limit=${limit}`\n}\n\nexport const filtersRequest = (filter, page, limit) => {\n  return `${filtersUrl()}?filter=${filter}&page=${page}&limit=${limit}`\n}\n\nexport const quoteRequest = () => {\n  return  quoteURL();\n}\n\nexport const subscriptionRequest = () => {\n  return  subscriptionURL();\n}\n\nexport const exerciseInfoRequest = (id) => {\n  return `${exerciseUrl()}/exercises/${id}`\n}\n\nexport const addRatingRequest = (id) => {\n  return `${exerciseUrl()}/${id}/rating`\n}\n\n\n","import { filtersUrl } from './api-service';\nimport axios from 'axios';\n\nexport async function getCategories() {\n    const { data } = await axios.get(`${filtersUrl()}`);\n    return data; \n  }","import createCategoriesMarkup from './markup/categoriesMarkup';\nimport { getCategories } from './api-requests';\n\nlet categoriesList = document.querySelector('.categories-list');\n\nasync function loadCategories(currentCategoryName) {\n  //параметри для фільтру, відображення\n  try {\n    const data = await getCategories();\n\n    //логіка if для відображення сітки з фільтрами\n\n    categoriesList.innerHTML = createCategoriesMarkup(data.results); // малюємо сітку без фільтрів\n\n    let categoriesItem = document.querySelectorAll('.categories-item');\n    categoriesItem.forEach((item, index) => {\n      item.style.backgroundImage = `url(${data.results[index].imgURL})`;\n      item.style.backgroundSize = 'cover';\n      item.style.backgroundRepeat = 'no-repeat';\n      item.style.backgroundPosition = 'center';\n      item.addEventListener('click', openCategory); // логіка відкриття вправ по категорії\n    });\n  } catch (error) {\n    console.error('Error loading categories:', error); //логіка помилок\n  }\n}\n\n// логіка відкриття вправ по категорії\nfunction openCategory(e) {\n  e.target.removeEventListener('click', openCategory);\n  categoriesList.style.display = 'none';\n  let categoryName = e.target.dataset.name;\n  console.log(categoryName); //потім видалити\n  //виклик ф-ії відмалювання вправ по картегорії\n}\n\nloadCategories();\n","const paginations = document.querySelectorAll('.pagination');\npaginations.forEach(pagination => {\n  pagination.innerHTML='';\n  if (pagination.hasAttribute('total-pages')){\n    const totalPages = parseInt(pagination.getAttribute('total-pages'));\n    const currentPage = parseInt(pagination.getAttribute('current-page'));\n    let pagesFragment = new DocumentFragment();\n    for(let i = 0; i < totalPages; i++) {\n      let p = document.createElement('p');\n      p.setAttribute('index', i);\n      p.innerHTML = i + 1;\n      p.classList.add('pagination-page');\n      if (i===currentPage){p.classList.add('selected');}\n      pagesFragment.appendChild(p);\n    }\n    pagination.appendChild(pagesFragment);\n    pagination.addEventListener('click', async (e) => {\n      if (e.target.classList.contains('pagination-page')){\n        const pages = pagination.querySelectorAll('.pagination-page');\n        pages.forEach(page => {\n            page.classList.remove('selected');\n        })\n        e.target.classList.add('selected');\n        e.target.parentElement.setAttribute('current-page', e.target.getAttribute('index'));\n      }\n\n    })\n  }\n})","// Импортируем общие стили\n\nimport './css/styles.css'\nimport './js/categories.js'\nimport './partials/components/pagination/PaginationComponent.js'\n\n\n// Если мы на странице task-management, загружаем дополнительные стили\nif (window.location.pathname.includes('task-management')) {\n    import('./css/task-manager.css');\n}\n\n// Функция для инициализации TaskManager\nasync function initTaskManager() {\n    if (!window.taskManager) {\n        try {\n            const TaskManagerModule = await import('./js/task-manager.js');\n            const TaskManager = TaskManagerModule.default;\n            window.taskManager = new TaskManager();\n            await new Promise(resolve => setTimeout(resolve, 200));\n        } catch (error) {\n            console.error('Error initializing TaskManager:', error);\n            return null;\n        }\n    }\n    return window.taskManager;\n}\n\n// Инициализируем обработчики кнопок\ndocument.addEventListener('DOMContentLoaded', async () => {\n    try {\n        // Если мы на странице task-management\n        if (window.location.pathname.includes('task-management')) {\n            // Инициализируем TaskManager\n            await initTaskManager();\n\n            // Обработчик для плавающей кнопки\n            const floatingAddTaskBtn = document.getElementById('addTaskBtn');\n            if (floatingAddTaskBtn) {\n                floatingAddTaskBtn.addEventListener('click', async (e) => {\n                    e.preventDefault();\n                    if (window.taskManager) {\n                        window.taskManager.showModal();\n                    } else {\n                        console.error('TaskManager not initialized');\n                    }\n                });\n            }\n        }\n    } catch (error) {\n        console.error('Error initializing task manager:', error);\n    }\n});\n\n"],"file":"assets/index-CHrQ_1br.js"}